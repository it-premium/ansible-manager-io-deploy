- name: manager install
  hosts: app
  tasks:
    - include_tasks: install-ubuntu.yml
      when: ansible_distribution == 'Ubuntu'
      tags: [consul]

    - include_tasks: install-centos.yml
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky'

    # - name: set version
    #   uri:
    #     url: https://www.manager.io/version.txt
    #     return_content: yes
    #   register: this
    #   #failed_when: "'AWESOME' not in this.content"

    - name: create manager folders
      become: True
      file:
        path: "{{ item }}"
        state: directory
        owner: itpremium
        group: itpremium
      with_list:
        - "{{ manager_path }}"
        - "{{ manager_data }}"
        - "{{ manager_backups }}"
      tags: [backup]

    - name: backup old manager
      community.general.archive:
        path: "{{ manager_path }}"
        dest: "{{ manager_backups }}/{{ ansible_date_time.iso8601_basic_short }}.tgz"
      tags: [backup]

    - name: extract manager
      unarchive:
        src: "https://github.com/Manager-io/Manager/releases/latest/download/ManagerServer-linux-x64.tar.gz"
        dest: "{{ manager_path }}"
        remote_src: yes

    - firewalld:
        zone: public
        port: "{{ manager_port }}/tcp"
        permanent: yes
        state: enabled # mono-complete
      when: firewalld_enabled

    - name: create manager service
      become: True
      template:
        src: manager-server.service.j2
        dest: /etc/systemd/system/manager-server.service

    - name: set running permissions
      file:
        path: "{{manager_path}}/ManagerServer"
        mode: "0755"

    - name: start manager service
      become: True
      systemd:
        daemon-reload: yes
        service: manager-server
        state: restarted

    - name: check manager running
      wait_for:
        host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
        port: "{{ manager_port }}"
        state: started

    # - name: Register services
    #   community.general.consul:
    #     service_name: "{{ manager_consul_name }}"
    #     service_port: "{{ manager_port }}"
    #     tags:
    #       - "{{ inventory_hostname }}"
    #       - "{{ env }}"
    #       - "traefik.enable=true"
    #       - "traefik.http.routers.manager.rule=Host(`qa.manager.it-premium.internal`)"
    #   tags: [consul]
